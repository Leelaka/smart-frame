{"version":3,"sources":["components/InfoDialog.js","container/App.js","reportWebVitals.js","index.js"],"names":["InfoDialog","open","setOpen","data","Dialog","onClose","DialogTitle","id","DialogContent","style","display","gap","label","title","creditLine","department","repository","dimensions","medium","subregion","region","country","DialogActions","padding","Button","onClick","color","Title","Typography","variant","gutterBottom","Data","fontWeight","App","useState","setData","showInfoDialog","setShowInfoDialog","setLoading","index","setIndex","progress","setProgress","useEffect","interval","setInterval","oldProgress","e","clearInterval","axios","get","then","res","console","log","catch","err","className","justifyContent","height","width","src","primaryImage","alt","LinearProgress","value","alignItems","CircularProgress","size","thickness","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83060263.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Typography,\n  } from \"@material-ui/core\";\n\n\nexport default function InfoDialog({open, setOpen, data}) {\n    return (\n        <Dialog\n            open = {open}\n            onClose={() => setOpen(false)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n        \n        <DialogTitle id=\"alert-dialog-title\">\n            \n            Additional information about this Art\n\n        </DialogTitle>\n\n        <DialogContent>\n            <div style={{ display: \"flex\", gap:20}}>\n            <div>\n                <Title label=\"Title:\" />\n                <Title label=\"Credit:\" />\n                <Title label=\"Department:\" />\n                <Title label=\"Repository:\" />\n                <Title label=\"Dimensions:\" />\n                <Title label=\"Medium:\" />\n                <Title label=\"Location:\" />\n            </div>\n\n            <div>\n                <Data label={data?.title} />\n                <Data label={data?.creditLine} />\n                <Data label={data?.department} />\n                <Data label={data?.repository} />\n                <Data label={data?.dimensions} />\n                <Data label={data?.medium} />\n                <Data\n                label={`${data?.subregion ? data?.subregion + \", \" : \"\"} ${\n                    data?.region ? data?.region + \", \" : \"\"\n                } ${data?.country}`}\n                />\n          </div>\n        </div>\n\n        </DialogContent>\n\n        <DialogActions style={{ padding: \"15px\"}}>\n            <Button onClick={() => setOpen(false)} style={{ color: \"#f50057\" }} id='back'>\n            Back\n            </Button>\n            {/* <Button onClick={handleClose} autoFocus>\n            Agree\n            </Button> */}\n        </DialogActions>\n    </Dialog>\n    );\n}\n\nconst Title = ({ label }) => {\n    return (\n    <Typography\n        variant=\"body1\"\n        display=\"block\"\n        gutterBottom\n        style={{ color: \"#8798AD\" }}\n    >\n        {label}\n    </Typography>\n    );\n};\n\nconst Data = ({ label }) => {\n    return (\n    <Typography\n        variant=\"body1\"\n        display=\"block\"\n        gutterBottom\n        style={{ fontWeight: 500, color: \"#2E384D\" }}\n    >\n        {label}\n    </Typography>\n    );\n};\n  \n\n","// import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport InfoDialog from '../components/InfoDialog';\nimport {CircularProgress, LinearProgress} from \"@material-ui/core\";\n\nfunction App() {\n\n  const rotationInterval = 10000; // milliseconds\n  const [data, setData] = useState();\n  const [showInfoDialog, setShowInfoDialog] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const [index, setIndex] = useState(101);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    let interval = null;\n\n    if(showInfoDialog === false) {\n      interval = setInterval(() => {\n        setProgress((oldProgress) => {\n          if(oldProgress >= 100) {\n            setIndex((e) => e + 1);\n            return 0;\n          }\n\n          return oldProgress + 3.34;\n        });\n      }, rotationInterval / 30);\n    } else {\n      clearInterval(interval);\n    }\n\n    return() => clearInterval(interval);\n  }, [index, progress, showInfoDialog]); \n\n  useEffect(() => {\n    setLoading(true);\n    axios.get(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${index}`) //api link\n        .then((res) => {\n            console.log(res.data);\n            setData(res.data);\n            setLoading(false);\n        })\n        .catch((err) => {\n            console.log(err);\n            setLoading(false);\n        });\n  }, [index]);\n\n  return (\n    <>\n    {data ? (\n      <div className ='App'>\n        <div\n          style={{display: 'flex',\n          justifyContent: 'center',\n          \n          height: \"100vh\" || 1200, //1920 x 1200 static \n          width: \"100vw\" || 1920,\n        }}\n        onClick={() => setShowInfoDialog(true)} //pop up window\n        >\n        <img \n          className=\"backgroundImg\"\n          src={data?.primaryImage}\n          alt=\"background\"\n        />\n\n        <img className='img' id='img' src={data?.primaryImage} alt='Primary'/>\n\n        <div className=\"linearProgressContainer\">\n            <LinearProgress variant=\"determinate\" value={progress}/>\n        </div>\n\n      </div> \n      </div>\n\n    ): (\n      <div\n        style={{\n          width: \"100vw\",\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}>\n          <CircularProgress size={100} thickness={5} />\n      </div>    \n    )}\n\n     <InfoDialog\n      open = {showInfoDialog}\n      setOpen = {setShowInfoDialog} //dialog box component\n      data = {data}\n      /> \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}